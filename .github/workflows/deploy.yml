name: Deploy to AWS

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      run: |
        cd environments/dev
        terraform init

    - name: Terraform Paln
      run:  |
        cd environments/dev
        terraform plan

    - name: Terraform Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        cd environments/dev
        terraform apply -auto-approve

    - name: Set up SSH key from GitHub Secrets
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/deploy_key
        chmod 600 /tmp/deploy_key

    - name: Get EC2 instance IP and Create Inventory
      run: |
        cd environments/dev
        INSTANCE_IP=$(terraform-bin output -raw instance_private_ip)
        echo "[ansible_host]" > ../../ansible/ansible_inventory.ini
        echo "$INSTANCE_IP ansible_ssh_user=ec2-user ansible_ssh_private_key_file=/tmp/deploy_key" >> ../../ansible/ansible_inventory.ini

    - name: Display the content of the inventory file
      run: |
        cd ansible
        cat ./ansible_inventory.ini

    - name: Ansible Playbook Run
      run: |
        cd ansible
        ansible-playbook -i ./ansible_inventory.ini ./site.yml -e 'ansible_ssh_common_args="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"'
